{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Helper function to get auth token\nconst getAuthToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Helper function to make authenticated requests\nconst makeRequest = async (url, options = {}) => {\n  const token = getAuthToken();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        'x-auth-token': token\n      }),\n      ...options.headers\n    },\n    ...options\n  };\n  const response = await fetch(`${API_BASE_URL}${url}`, config);\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\n\n// Auth API\nexport const authAPI = {\n  register: async (email, password) => {\n    const response = await makeRequest('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.token) {\n      localStorage.setItem('token', response.token);\n    }\n    return response;\n  },\n  login: async (email, password) => {\n    const response = await makeRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.token) {\n      localStorage.setItem('token', response.token);\n    }\n    return response;\n  },\n  getProfile: async () => {\n    return makeRequest('/auth/me');\n  },\n  updateGoal: async target_kg => {\n    return makeRequest('/auth/goal', {\n      method: 'PUT',\n      body: JSON.stringify({\n        target_kg\n      })\n    });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  }\n};\n\n// Activities API\nexport const activitiesAPI = {\n  logActivity: async (type, data) => {\n    return makeRequest('/activities', {\n      method: 'POST',\n      body: JSON.stringify({\n        type,\n        data\n      })\n    });\n  },\n  getMyActivities: async () => {\n    return makeRequest('/activities/me');\n  }\n};\n\n// Leaderboard API\nexport const leaderboardAPI = {\n  getLeaderboard: async () => {\n    return makeRequest('/leaderboard');\n  }\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  const token = getAuthToken();\n  if (!token) return false;\n  try {\n    // Check if token is expired (basic check)\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.exp * 1000 > Date.now();\n  } catch {\n    return false;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","getAuthToken","localStorage","getItem","makeRequest","url","options","token","config","headers","response","fetch","ok","error","json","Error","message","authAPI","register","email","password","method","body","JSON","stringify","setItem","login","getProfile","updateGoal","target_kg","logout","removeItem","activitiesAPI","logActivity","type","data","getMyActivities","leaderboardAPI","getLeaderboard","isAuthenticated","payload","parse","atob","split","exp","Date","now"],"sources":["C:/Users/vivek/Ecotrack/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Helper function to get auth token\r\nconst getAuthToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\n// Helper function to make authenticated requests\r\nconst makeRequest = async (url, options = {}) => {\r\n  const token = getAuthToken();\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { 'x-auth-token': token }),\r\n      ...options.headers,\r\n    },\r\n    ...options,\r\n  };\r\n\r\n  const response = await fetch(`${API_BASE_URL}${url}`, config);\r\n  \r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.message || 'Something went wrong');\r\n  }\r\n  \r\n  return response.json();\r\n};\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: async (email, password) => {\r\n    const response = await makeRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    \r\n    if (response.token) {\r\n      localStorage.setItem('token', response.token);\r\n    }\r\n    \r\n    return response;\r\n  },\r\n\r\n  login: async (email, password) => {\r\n    const response = await makeRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    \r\n    if (response.token) {\r\n      localStorage.setItem('token', response.token);\r\n    }\r\n    \r\n    return response;\r\n  },\r\n\r\n  getProfile: async () => {\r\n    return makeRequest('/auth/me');\r\n  },\r\n\r\n  updateGoal: async (target_kg) => {\r\n    return makeRequest('/auth/goal', {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ target_kg }),\r\n    });\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n  },\r\n};\r\n\r\n// Activities API\r\nexport const activitiesAPI = {\r\n  logActivity: async (type, data) => {\r\n    return makeRequest('/activities', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ type, data }),\r\n    });\r\n  },\r\n\r\n  getMyActivities: async () => {\r\n    return makeRequest('/activities/me');\r\n  },\r\n};\r\n\r\n// Leaderboard API\r\nexport const leaderboardAPI = {\r\n  getLeaderboard: async () => {\r\n    return makeRequest('/leaderboard');\r\n  },\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  const token = getAuthToken();\r\n  if (!token) return false;\r\n  \r\n  try {\r\n    // Check if token is expired (basic check)\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    return payload.exp * 1000 > Date.now();\r\n  } catch {\r\n    return false;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}